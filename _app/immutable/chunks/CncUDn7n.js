import{x as S,y as h,z as g,A as k,B as x,C as B}from"./DPLFGynG.js";const O=new Set,T=new Set;function z(a){for(var t=0;t<a.length;t++)O.add(a[t]);for(var f of T)f(a)}function A(a){var d;var t=this,f=t.ownerDocument,v=a.type,o=((d=a.composedPath)==null?void 0:d.call(a))||[],r=o[0]||a.target,s=0,u=a.__root;if(u){var c=o.indexOf(u);if(c!==-1&&(t===document||t===window)){a.__root=t;return}var _=o.indexOf(t);if(_===-1)return;c<=_&&(s=c)}if(r=o[s]||a.target,r!==t){S(a,"currentTarget",{configurable:!0,get(){return r||f}});var y=x,m=B;h(null),g(null);try{for(var e,p=[];r!==null;){var n=r.assignedSlot||r.parentNode||r.host||null;try{var i=r["__"+v];if(i!=null&&(!r.disabled||a.target===r))if(k(i)){var[w,...b]=i;w.apply(r,[a,...b])}else i.call(r,a)}catch(l){e?p.push(l):e=l}if(a.cancelBubble||n===t||n===null)break;r=n}if(e){for(let l of p)queueMicrotask(()=>{throw l});throw e}}finally{a.__root=t,delete a.currentTarget,h(y),g(m)}}}export{O as a,z as d,A as h,T as r};
